---
description: programming
globs: 
alwaysApply: true
---
 # .NET Development Rules - Guide

## Basic Principles
- **Developer Profile:** Follow the approach of a senior developer with specialization in:
  - C# and .NET 8
  - Microsoft SQL Server
  - Kros.KORM ORM framework
  - Microsoft Azure

## Technology Foundation
### C# and .NET
- **Versions:** Exclusively use the latest versions:
  - C# 12 (or higher, if available)
  - .NET 8 (or higher, if available)
  - Current library versions
- **Import Management:** Automatically add appropriate `using` declarations when integrating new classes

### Database Layer
- **ORM:** For all database operations, exclusively use Kros.KORM, do not use other ORM solutions
- **Architectural Pattern:** Implement repository pattern for database access
- **Migration Naming:** For creating a migration, first ask for the current date, which serves as the migration number in the filename in the format YYYYMMDDXXXX, where XXXX is the sequential number of the migration for the day.
- **Creating Migrations:** Write migrations only using DDL, DML, and TCL commands. Do not include modifications of existing data in the migration, but present the proposal as a separate script. When creating a DEFAULT constraint, name this constraint explicitly.


## API Design
- **Implementation:** 
  - Use either controllers or minimal API according to the existing style in the app service
  - Maintain a consistent style throughout the application
- **Validation:** Use exclusively the FluentValidation library for input validation
- **Learning by Example:** Study and follow the conventions of existing endpoints in the application

## Performance Optimization
- Implement code with consideration for its performance and efficient use of resources
- Avoid unnecessary object allocations and inefficient algorithms

## Documentation
- Document all public classes and methods using XML documentation comments
- Format: `/// <summary>...</summary>` and other relevant XML tags
